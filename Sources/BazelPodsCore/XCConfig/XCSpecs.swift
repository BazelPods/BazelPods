//
//  XCSpecs.swift
//  PodToBUILD
//
//  Created by Sergey Khliustin on 02.09.2022.
//

import Foundation

// https://github.com/bazel-ios/rules_ios/blob/master/data/xcspecs.bzl
// TODO: Optimize
struct XCSpecs {
    enum XType {
        case boolean
        case string
        case stringList
        case path
        case pathList
        case enumeration
    }
    typealias XElement = (name: String, type: XType)

    static let allSettings = clang + coredata + coredataMapping + swift
    static let allSettingsKeyType: [String: XType] = {
        return allSettings.reduce(into: [String: XType]()) { result, element in
            result[element.name] = element.type
        }
    }()

    // TODO: Investigate
    static let forceIgnore = [
        "GCC_C_LANGUAGE_STANDARD"
    ]

    // com.apple.compilers.llvm.clang.1_0
    static let clang: [XElement] = [
        ("CLANG_ADDRESS_SANITIZER", .boolean),
        ("CLANG_ADDRESS_SANITIZER_ALLOW_ERROR_RECOVERY", .boolean),
        ("CLANG_ADDRESS_SANITIZER_CONTAINER_OVERFLOW", .boolean),
        ("CLANG_ADDRESS_SANITIZER_USE_AFTER_SCOPE", .boolean),
        ("CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES", .boolean),
        ("CLANG_ARC_MIGRATE_DIR", .path),
        ("CLANG_ARC_MIGRATE_EMIT_ERROR", .boolean),
        ("CLANG_ARC_MIGRATE_PRECHECK", .enumeration),
        ("CLANG_ARC_MIGRATE_REPORT_OUTPUT", .path),
        ("CLANG_BITCODE_GENERATION_MODE", .enumeration),
        ("CLANG_COLOR_DIAGNOSTICS", .boolean),
        ("CLANG_COVERAGE_MAPPING", .boolean),
        ("CLANG_COVERAGE_MAPPING_LINKER_ARGS", .boolean),
        ("CLANG_CXX_LANGUAGE_STANDARD", .enumeration),
        ("CLANG_CXX_LIBRARY", .enumeration),
        ("CLANG_DEBUG_INFORMATION_LEVEL", .enumeration),
        ("CLANG_DEBUG_MODULES", .boolean),
        ("CLANG_ENABLE_APP_EXTENSION", .boolean),
        ("CLANG_ENABLE_CODE_COVERAGE", .boolean),
        ("CLANG_ENABLE_CPP_STATIC_DESTRUCTORS", .boolean),
        ("CLANG_ENABLE_MODULES", .boolean),
        ("CLANG_ENABLE_MODULE_DEBUGGING", .boolean),
        ("CLANG_ENABLE_MODULE_IMPLEMENTATION_OF", .boolean),
        ("CLANG_ENABLE_OBJC_ARC", .boolean),
        ("CLANG_ENABLE_OBJC_WEAK", .boolean),
        ("CLANG_INDEX_STORE_ENABLE", .boolean),
        ("CLANG_INDEX_STORE_PATH", .path),
        ("CLANG_INSTRUMENT_FOR_OPTIMIZATION_PROFILING", .boolean),
        ("CLANG_LINK_OBJC_RUNTIME", .boolean),
        ("CLANG_MACRO_BACKTRACE_LIMIT", .string),
        ("CLANG_MODULES_AUTOLINK", .boolean),
        ("CLANG_MODULES_BUILD_SESSION_FILE", .string),
        ("CLANG_MODULES_DISABLE_PRIVATE_WARNING", .boolean),
        ("CLANG_MODULES_IGNORE_MACROS", .stringList),
        ("CLANG_MODULES_PRUNE_AFTER", .string),
        ("CLANG_MODULES_PRUNE_INTERVAL", .string),
        ("CLANG_MODULES_VALIDATE_SYSTEM_HEADERS", .boolean),
        ("CLANG_MODULE_CACHE_PATH", .string),
        ("CLANG_MODULE_LSV", .boolean),
        ("CLANG_OBJC_MIGRATE_DIR", .path),
        ("CLANG_OPTIMIZATION_PROFILE_FILE", .path),
        ("CLANG_RETAIN_COMMENTS_FROM_SYSTEM_HEADERS", .boolean),
        ("CLANG_TARGET_TRIPLE_ARCHS", .stringList),
        ("CLANG_TARGET_TRIPLE_VARIANTS", .stringList),
        ("CLANG_THREAD_SANITIZER", .boolean),
        ("CLANG_TOOLCHAIN_FLAGS", .stringList),
        ("CLANG_TRIVIAL_AUTO_VAR_INIT", .enumeration),
        ("CLANG_UNDEFINED_BEHAVIOR_SANITIZER", .boolean),
        ("CLANG_UNDEFINED_BEHAVIOR_SANITIZER_INTEGER", .boolean),
        ("CLANG_UNDEFINED_BEHAVIOR_SANITIZER_NULLABILITY", .boolean),
        ("CLANG_USE_OPTIMIZATION_PROFILE", .boolean),
        ("CLANG_WARN_ASSIGN_ENUM", .boolean),
        ("CLANG_WARN_ATOMIC_IMPLICIT_SEQ_CST", .boolean),
        ("CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING", .enumeration),
        ("CLANG_WARN_BOOL_CONVERSION", .enumeration),
        ("CLANG_WARN_COMMA", .enumeration),
        ("CLANG_WARN_CONSTANT_CONVERSION", .enumeration),
        ("CLANG_WARN_CXX0X_EXTENSIONS", .boolean),
        ("CLANG_WARN_DELETE_NON_VIRTUAL_DTOR", .enumeration),
        ("CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS", .boolean),
        ("CLANG_WARN_DIRECT_OBJC_ISA_USAGE", .enumeration),
        ("CLANG_WARN_DOCUMENTATION_COMMENTS", .boolean),
        ("CLANG_WARN_EMPTY_BODY", .boolean),
        ("CLANG_WARN_ENUM_CONVERSION", .enumeration),
        ("CLANG_WARN_FLOAT_CONVERSION", .enumeration),
        ("CLANG_WARN_FRAMEWORK_INCLUDE_PRIVATE_FROM_PUBLIC", .enumeration),
        ("CLANG_WARN_IMPLICIT_SIGN_CONVERSION", .enumeration),
        ("CLANG_WARN_INFINITE_RECURSION", .boolean),
        ("CLANG_WARN_INT_CONVERSION", .enumeration),
        ("CLANG_WARN_MISSING_NOESCAPE", .enumeration),
        ("CLANG_WARN_NON_LITERAL_NULL_CONVERSION", .enumeration),
        ("CLANG_WARN_NULLABLE_TO_NONNULL_CONVERSION", .boolean),
        ("CLANG_WARN_OBJC_EXPLICIT_OWNERSHIP_TYPE", .boolean),
        ("CLANG_WARN_OBJC_IMPLICIT_ATOMIC_PROPERTIES", .boolean),
        ("CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF", .boolean),
        ("CLANG_WARN_OBJC_INTERFACE_IVARS", .enumeration),
        ("CLANG_WARN_OBJC_LITERAL_CONVERSION", .enumeration),
        ("CLANG_WARN_OBJC_MISSING_PROPERTY_SYNTHESIS", .boolean),
        ("CLANG_WARN_OBJC_REPEATED_USE_OF_WEAK", .enumeration),
        ("CLANG_WARN_OBJC_ROOT_CLASS", .enumeration),
        ("CLANG_WARN_PRAGMA_PACK", .enumeration),
        ("CLANG_WARN_PRIVATE_MODULE", .boolean),
        ("CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER", .enumeration),
        ("CLANG_WARN_RANGE_LOOP_ANALYSIS", .boolean),
        ("CLANG_WARN_SEMICOLON_BEFORE_METHOD_BODY", .boolean),
        ("CLANG_WARN_STRICT_PROTOTYPES", .enumeration),
        ("CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION", .enumeration),
        ("CLANG_WARN_SUSPICIOUS_MOVE", .boolean),
        ("CLANG_WARN_UNGUARDED_AVAILABILITY", .enumeration),
        ("CLANG_WARN_UNREACHABLE_CODE", .enumeration),
        ("CLANG_WARN_VEXING_PARSE", .enumeration),
        ("CLANG_WARN__ARC_BRIDGE_CAST_NONARC", .boolean),
        ("CLANG_WARN__DUPLICATE_METHOD_MATCH", .boolean),
        ("CLANG_WARN__EXIT_TIME_DESTRUCTORS", .boolean),
        ("CLANG_X86_VECTOR_INSTRUCTIONS", .enumeration),
        ("CPP_HEADERMAP_FILE", .path),
        ("CPP_HEADERMAP_FILE_FOR_ALL_NON_FRAMEWORK_TARGET_HEADERS", .path),
        ("CPP_HEADERMAP_FILE_FOR_ALL_TARGET_HEADERS", .path),
        ("CPP_HEADERMAP_FILE_FOR_GENERATED_FILES", .path),
        ("CPP_HEADERMAP_FILE_FOR_OWN_TARGET_HEADERS", .path),
        ("CPP_HEADERMAP_FILE_FOR_PROJECT_FILES", .path),
        ("CPP_HEADERMAP_PRODUCT_HEADERS_VFS_FILE", .path),
        ("CPP_HEADER_SYMLINKS_DIR", .path),
        ("DEFAULT_SSE_LEVEL_3_NO", .string),
        ("DEFAULT_SSE_LEVEL_3_SUPPLEMENTAL_NO", .string),
        ("DEFAULT_SSE_LEVEL_3_SUPPLEMENTAL_YES", .string),
        ("DEFAULT_SSE_LEVEL_3_YES", .string),
        ("DEFAULT_SSE_LEVEL_4_1_NO", .string),
        ("DEFAULT_SSE_LEVEL_4_1_YES", .string),
        ("DEFAULT_SSE_LEVEL_4_2_NO", .string),
        ("DEFAULT_SSE_LEVEL_4_2_YES", .string),
        ("ENABLE_APPLE_KEXT_CODE_GENERATION", .boolean),
        ("ENABLE_NS_ASSERTIONS", .boolean),
        ("ENABLE_STRICT_OBJC_MSGSEND", .boolean),
        ("GCC_CHAR_IS_UNSIGNED_CHAR", .boolean),
        ("GCC_CW_ASM_SYNTAX", .boolean),
        ("GCC_C_LANGUAGE_STANDARD", .enumeration),
        ("GCC_DEBUG_INFORMATION_FORMAT", .enumeration),
        ("GCC_DYNAMIC_NO_PIC", .boolean),
        ("GCC_ENABLE_ASM_KEYWORD", .boolean),
        ("GCC_ENABLE_BUILTIN_FUNCTIONS", .boolean),
        ("GCC_ENABLE_CPP_EXCEPTIONS", .boolean),
        ("GCC_ENABLE_CPP_RTTI", .boolean),
        ("GCC_ENABLE_EXCEPTIONS", .boolean),
        ("GCC_ENABLE_FLOATING_POINT_LIBRARY_CALLS", .boolean),
        ("GCC_ENABLE_KERNEL_DEVELOPMENT", .boolean),
        ("GCC_ENABLE_OBJC_EXCEPTIONS", .boolean),
        ("GCC_ENABLE_PASCAL_STRINGS", .boolean),
        ("GCC_ENABLE_SSE3_EXTENSIONS", .boolean),
        ("GCC_ENABLE_SSE41_EXTENSIONS", .boolean),
        ("GCC_ENABLE_SSE42_EXTENSIONS", .boolean),
        ("GCC_ENABLE_SUPPLEMENTAL_SSE3_INSTRUCTIONS", .boolean),
        ("GCC_ENABLE_TRIGRAPHS", .boolean),
        ("GCC_FAST_MATH", .boolean),
        ("GCC_GENERATE_DEBUGGING_SYMBOLS", .boolean),
        ("GCC_GENERATE_TEST_COVERAGE_FILES", .boolean),
        ("GCC_INCREASE_PRECOMPILED_HEADER_SHARING", .boolean),
        ("GCC_INLINES_ARE_PRIVATE_EXTERN", .boolean),
        ("GCC_INPUT_FILETYPE", .enumeration),
        ("GCC_INSTRUMENT_PROGRAM_FLOW_ARCS", .boolean),
        ("GCC_LINK_WITH_DYNAMIC_LIBRARIES", .boolean),
        ("GCC_MACOSX_VERSION_MIN", .string),
        ("GCC_NO_COMMON_BLOCKS", .boolean),
        ("GCC_OBJC_ABI_VERSION", .enumeration),
        ("GCC_OBJC_LEGACY_DISPATCH", .boolean),
        ("GCC_OPERATION", .enumeration),
        ("GCC_OPTIMIZATION_LEVEL", .enumeration),
        ("GCC_PFE_FILE_C_DIALECTS", .stringList),
        ("GCC_PRECOMPILE_PREFIX_HEADER", .boolean),
        ("GCC_PREFIX_HEADER", .string),
        ("GCC_PREPROCESSOR_DEFINITIONS", .stringList),
        ("GCC_PREPROCESSOR_DEFINITIONS_NOT_USED_IN_PRECOMPS", .stringList),
        ("GCC_PRODUCT_TYPE_PREPROCESSOR_DEFINITIONS", .stringList),
        ("GCC_REUSE_STRINGS", .boolean),
        ("GCC_SHORT_ENUMS", .boolean),
        ("GCC_STRICT_ALIASING", .boolean),
        ("GCC_SYMBOLS_PRIVATE_EXTERN", .boolean),
        ("GCC_THREADSAFE_STATICS", .boolean),
        ("GCC_TREAT_IMPLICIT_FUNCTION_DECLARATIONS_AS_ERRORS", .boolean),
        ("GCC_TREAT_INCOMPATIBLE_POINTER_TYPE_WARNINGS_AS_ERRORS", .boolean),
        ("GCC_TREAT_WARNINGS_AS_ERRORS", .boolean),
        ("GCC_UNROLL_LOOPS", .boolean),
        ("GCC_USE_GCC3_PFE_SUPPORT", .boolean),
        ("GCC_USE_STANDARD_INCLUDE_SEARCHING", .boolean),
        ("GCC_WARN_64_TO_32_BIT_CONVERSION", .enumeration),
        ("GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS", .boolean),
        ("GCC_WARN_ABOUT_INVALID_OFFSETOF_MACRO", .boolean),
        ("GCC_WARN_ABOUT_MISSING_FIELD_INITIALIZERS", .boolean),
        ("GCC_WARN_ABOUT_MISSING_NEWLINE", .boolean),
        ("GCC_WARN_ABOUT_MISSING_PROTOTYPES", .boolean),
        ("GCC_WARN_ABOUT_POINTER_SIGNEDNESS", .boolean),
        ("GCC_WARN_ABOUT_RETURN_TYPE", .enumeration),
        ("GCC_WARN_ALLOW_INCOMPLETE_PROTOCOL", .boolean),
        ("GCC_WARN_CHECK_SWITCH_STATEMENTS", .boolean),
        ("GCC_WARN_FOUR_CHARACTER_CONSTANTS", .boolean),
        ("GCC_WARN_HIDDEN_VIRTUAL_FUNCTIONS", .boolean),
        ("GCC_WARN_INHIBIT_ALL_WARNINGS", .boolean),
        ("GCC_WARN_INITIALIZER_NOT_FULLY_BRACKETED", .boolean),
        ("GCC_WARN_MISSING_PARENTHESES", .boolean),
        ("GCC_WARN_MULTIPLE_DEFINITION_TYPES_FOR_SELECTOR", .boolean),
        ("GCC_WARN_NON_VIRTUAL_DESTRUCTOR", .boolean),
        ("GCC_WARN_PEDANTIC", .boolean),
        ("GCC_WARN_SHADOW", .boolean),
        ("GCC_WARN_SIGN_COMPARE", .boolean),
        ("GCC_WARN_STRICT_SELECTOR_MATCH", .boolean),
        ("GCC_WARN_TYPECHECK_CALLS_TO_PRINTF", .boolean),
        ("GCC_WARN_UNDECLARED_SELECTOR", .boolean),
        ("GCC_WARN_UNINITIALIZED_AUTOS", .enumeration),
        ("GCC_WARN_UNKNOWN_PRAGMAS", .boolean),
        ("GCC_WARN_UNUSED_FUNCTION", .boolean),
        ("GCC_WARN_UNUSED_LABEL", .boolean),
        ("GCC_WARN_UNUSED_PARAMETER", .boolean),
        ("GCC_WARN_UNUSED_VALUE", .boolean),
        ("GCC_WARN_UNUSED_VARIABLE", .boolean),
        ("HEADERMAP_FILE_FORMAT", .enumeration),
        ("LLVM_IMPLICIT_AGGRESSIVE_OPTIMIZATIONS", .boolean),
        ("LLVM_LTO", .enumeration),
        ("LLVM_OPTIMIZATION_LEVEL_VAL_0", .boolean),
        ("LLVM_OPTIMIZATION_LEVEL_VAL_1", .boolean),
        ("LLVM_OPTIMIZATION_LEVEL_VAL_2", .boolean),
        ("LLVM_OPTIMIZATION_LEVEL_VAL_3", .boolean),
        ("LLVM_OPTIMIZATION_LEVEL_VAL_fast", .boolean),
        ("LLVM_OPTIMIZATION_LEVEL_VAL_s", .boolean),
        ("LLVM_OPTIMIZATION_LEVEL_VAL_z", .boolean),
        ("OTHER_CFLAGS", .stringList),
        ("OTHER_CPLUSPLUSFLAGS", .stringList),
        ("USE_HEADERMAP", .boolean),
        ("USE_HEADER_SYMLINKS", .boolean),
        ("WARNING_CFLAGS", .stringList),
        ("arch", .string),
        ("diagnostic_message_length", .string),
        ("print_note_include_stack", .boolean)
    ]

    // com.apple.compilers.model.coredata
    static let coredata: [XElement] = [
        ("DEPLOYMENT_TARGET", .string),
        ("MOMC_MODULE", .string),
        ("MOMC_NO_DELETE_RULE_WARNINGS", .boolean),
        ("MOMC_NO_INVERSE_RELATIONSHIP_WARNINGS", .boolean),
        ("MOMC_NO_MAX_PROPERTY_COUNT_WARNINGS", .boolean),
        ("MOMC_NO_WARNINGS", .boolean),
        ("MOMC_OUTPUT_SUFFIX", .string),
        ("MOMC_OUTPUT_SUFFIX__xcdatamodel", .string),
        ("MOMC_OUTPUT_SUFFIX__xcdatamodeld", .string),
        ("MOMC_SUPPRESS_INVERSE_TRANSIENT_ERROR", .boolean),
        ("build_file_compiler_flags", .stringList)
    ]

    // com.apple.compilers.model.coredatamapping
    static let coredataMapping: [XElement] = [
        ("DEPLOYMENT_TARGET", .string),
        ("MAPC_MODULE", .string),
        ("MAPC_NO_WARNINGS", .boolean),
        ("build_file_compiler_flags", .stringList)
    ]

    // com.apple.pbx.linkers.ld
    static let linker: [XElement] = [
        ("ALL_OTHER_LDFLAGS", .stringList),
        ("ALTERNATE_LINKER", .string),
        ("AdditionalCommandLineArguments", .stringList),
        ("BUNDLE_LOADER", .path),
        ("CLANG_ARC_MIGRATE_DIR", .path),
        ("CLANG_ARC_MIGRATE_PRECHECK", .enumeration),
        ("DEAD_CODE_STRIPPING", .boolean),
        ("EXPORTED_SYMBOLS_FILE", .path),
        ("FRAMEWORK_SEARCH_PATHS", .pathList),
        ("GENERATE_PROFILING_CODE", .boolean),
        ("INIT_ROUTINE", .string),
        ("KEEP_PRIVATE_EXTERNS", .boolean),
        ("LD_ADDITIONAL_DEPLOYMENT_TARGET_FLAGS", .stringList),
        ("LD_BITCODE_GENERATION_MODE", .enumeration),
        ("LD_DEBUG_VARIANT", .boolean),
        ("LD_DEPENDENCY_INFO_FILE", .path),
        ("LD_DEPLOYMENT_TARGET", .string),
        ("LD_DONT_RUN_DEDUPLICATION", .boolean),
        ("LD_DYLIB_ALLOWABLE_CLIENTS", .stringList),
        ("LD_DYLIB_INSTALL_NAME", .path),
        ("LD_EXPORT_GLOBAL_SYMBOLS", .boolean),
        ("LD_FINAL_OUTPUT_FILE", .path),
        ("LD_GENERATE_BITCODE_SYMBOL_MAP", .boolean),
        ("LD_GENERATE_MAP_FILE", .boolean),
        ("LD_HIDE_BITCODE_SYMBOLS", .boolean),
        ("LD_LTO_OBJECT_FILE", .path),
        ("LD_MAP_FILE_PATH", .path),
        ("LD_NO_PIE", .boolean),
        ("LD_OBJC_ABI_VERSION", .enumeration),
        ("LD_QUOTE_LINKER_ARGUMENTS_FOR_COMPILER_DRIVER", .boolean),
        ("LD_RUNPATH_SEARCH_PATHS", .pathList),
        ("LD_TARGET_TRIPLE_ARCHS", .stringList),
        ("LD_TARGET_TRIPLE_VARIANTS", .stringList),
        ("LD_THREAD_SANITIZER", .boolean),
        ("LD_VERIFY_BITCODE", .boolean),
        ("LIBRARY_SEARCH_PATHS", .pathList),
        ("LINKER_DISPLAYS_MANGLED_NAMES", .boolean),
        ("LINK_WITH_STANDARD_LIBRARIES", .boolean),
        ("MACH_O_TYPE", .enumeration),
        ("ORDER_FILE", .path),
        ("OTHER_LDRFLAGS", .stringList),
        ("PRESERVE_DEAD_CODE_INITS_AND_TERMS", .boolean),
        ("PRODUCT_TYPE_FRAMEWORK_SEARCH_PATHS", .pathList),
        ("PRODUCT_TYPE_LIBRARY_SEARCH_PATHS", .pathList),
        ("REEXPORTED_FRAMEWORK_NAMES", .stringList),
        ("REEXPORTED_LIBRARY_NAMES", .stringList),
        ("REEXPORTED_LIBRARY_PATHS", .pathList),
        ("SYSTEM_FRAMEWORK_SEARCH_PATHS", .pathList),
        ("UNEXPORTED_SYMBOLS_FILE", .path),
        ("__INPUT_FILE_LIST_PATH__", .path),
        ("arch", .string)
    ]

    // com.apple.xcode.tools.ibtool.compiler
    static let ibtool: [XElement] = [
        ("IBC_COMPILER_AUTO_ACTIVATE_CUSTOM_FONTS", .boolean),
        ("IBC_COMPILER_USE_NIBARCHIVES_FOR_MACOS", .string),
        ("IBC_ERRORS", .boolean),
        ("IBC_FLATTEN_NIBS", .boolean),
        ("IBC_MODULE", .string),
        ("IBC_NOTICES", .boolean),
        ("IBC_OTHER_FLAGS", .stringList),
        ("IBC_OVERRIDING_PLUGINS_AND_FRAMEWORKS_DIR", .path),
        ("IBC_PLUGINS", .stringList),
        ("IBC_PLUGIN_SEARCH_PATHS", .pathList),
        ("IBC_REGIONS_AND_STRINGS_FILES", .stringList),
        ("IBC_WARNINGS", .boolean),
        ("RESOURCES_PLATFORM_NAME", .string),
        ("RESOURCES_TARGETED_DEVICE_FAMILY", .stringList),
        ("XIB_COMPILER_INFOPLIST_CONTENT_FILE", .path),
        ("build_file_compiler_flags", .stringList)
    ]

    // com.apple.xcode.tools.swift.compiler
    static let swift: [XElement] = [
        ("CLANG_COVERAGE_MAPPING", .boolean),
        ("CLANG_COVERAGE_MAPPING_LINKER_ARGS", .boolean),
        ("CLANG_MODULE_CACHE_PATH", .path),
        ("FRAMEWORK_SEARCH_PATHS", .pathList),
        ("GCC_GENERATE_DEBUGGING_SYMBOLS", .boolean),
        ("OTHER_SWIFT_FLAGS", .stringList),
        ("SWIFT_ACTIVE_COMPILATION_CONDITIONS", .stringList),
        ("SWIFT_ADDRESS_SANITIZER", .boolean),
        ("SWIFT_ADDRESS_SANITIZER_ALLOW_ERROR_RECOVERY", .boolean),
        ("SWIFT_BITCODE_GENERATION_MODE", .enumeration),
        ("SWIFT_COMPILATION_MODE", .enumeration),
        ("SWIFT_CROSS_MODULE_OPTIMIZATION", .boolean),
        ("SWIFT_DEPLOYMENT_TARGET", .string),
        ("SWIFT_DISABLE_SAFETY_CHECKS", .boolean),
        ("SWIFT_EMIT_MODULE_INTERFACE", .boolean),
        ("SWIFT_ENABLE_APP_EXTENSION", .boolean),
        ("SWIFT_ENABLE_BATCH_MODE", .boolean),
        ("SWIFT_ENABLE_INCREMENTAL_COMPILATION", .boolean),
        ("SWIFT_ENABLE_LIBRARY_EVOLUTION", .boolean),
        ("SWIFT_ENABLE_TESTABILITY", .boolean),
        ("SWIFT_ENFORCE_EXCLUSIVE_ACCESS", .enumeration),
        ("SWIFT_EXEC", .path),
        ("SWIFT_INCLUDE_PATHS", .pathList),
        ("SWIFT_INDEX_STORE_ENABLE", .boolean),
        ("SWIFT_INDEX_STORE_PATH", .path),
        ("SWIFT_INSTALL_OBJC_HEADER", .boolean),
        ("SWIFT_LIBRARIES_ONLY", .boolean),
        ("SWIFT_LIBRARY_PATH", .path),
        ("SWIFT_LINK_OBJC_RUNTIME", .boolean),
        ("SWIFT_MIGRATE_CODE", .boolean),
        ("SWIFT_MODULE_NAME", .string),
        ("SWIFT_OBJC_BRIDGING_HEADER", .string),
        ("SWIFT_OBJC_INTERFACE_HEADER_NAME", .string),
        ("SWIFT_OPTIMIZATION_LEVEL", .enumeration),
        ("SWIFT_PRECOMPILE_BRIDGING_HEADER", .boolean),
        ("SWIFT_REFLECTION_METADATA_LEVEL", .enumeration),
        ("SWIFT_RESOURCE_DIR", .path),
        ("SWIFT_RESPONSE_FILE_PATH", .path),
        ("SWIFT_SERIALIZE_DEBUGGING_OPTIONS", .boolean),
        ("SWIFT_STDLIB", .string),
        ("SWIFT_SUPPRESS_WARNINGS", .boolean),
        ("SWIFT_TARGET_TRIPLE", .string),
        ("SWIFT_TARGET_TRIPLE_VARIANTS", .stringList),
        ("SWIFT_THREAD_SANITIZER", .boolean),
        ("SWIFT_TOOLCHAIN_FLAGS", .stringList),
        ("SWIFT_TREAT_WARNINGS_AS_ERRORS", .boolean),
        ("SWIFT_USE_PARALLEL_WHOLE_MODULE_OPTIMIZATION", .boolean),
        ("SWIFT_USE_PARALLEL_WMO_TARGETS", .boolean),
        ("SWIFT_VERSION", .string),
        ("SWIFT_WHOLE_MODULE_OPTIMIZATION", .boolean),
        ("__SWIFT_ENFORCE_EXCLUSIVE_ACCESS_DEBUG_ENFORCEMENT_DEBUG", .boolean),
        ("__SWIFT_ENFORCE_EXCLUSIVE_ACCESS_DEBUG_ENFORCEMENT_RELEASE", .boolean)
    ]
}
